import { CSSResult, CSSResultArray, LitElement, css, unsafeCSS } from 'lit-element';

import { ScopedElementsMixin } from '@open-wc/scoped-elements';
import { addBreakpoints } from '../utils/add-breakpoints';

/**
 * One of the base classes for each rel-specific element in the collection
 * providing shared TailwindCSS styles for Shadow DOM content.
 * This class MUST NOT be used on its own (hence the `abstract` keyword) or
 * referenced externally (outside of the package).
 */
export abstract class Themeable extends ScopedElementsMixin(LitElement) {
  /**
   * Shared TailwindCSS stylesheet generated by the bundler, dev server or
   * any other project building setup included with this package. The content in the
   * template literal below will be replaced with the relevant styles during build â€“ DO NOT change this.
   * Using `unsafeCSS` to skip additional sanitization since it's our own code anyway.
   * @readonly
   */
  public static get styles(): CSSResult | CSSResultArray {
    return [
      unsafeCSS`{{ output }}`,
      css`
        :host {
          display: block;
        }
      `,
    ];
  }

  private __removeBreakpoints?: () => void;

  connectedCallback(): void {
    super.connectedCallback();
    this.__removeBreakpoints = addBreakpoints(this);
  }

  disconnectedCallback(): void {
    super.disconnectedCallback();
    this.__removeBreakpoints?.();
  }
}
